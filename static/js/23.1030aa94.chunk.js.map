{"version":3,"file":"static/js/23.1030aa94.chunk.js","mappings":"4LAqCA,UAjCgB,WACd,OAA0BA,EAAAA,EAAAA,MAAlBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,EAASC,GAAMM,MAAK,SAAAC,GAEpCJ,EAAWI,EAAKC,QACjB,GACF,GAAE,CAACT,EAASC,KAKX,yBACGE,EAAQO,OAAS,GAChB,0BACE,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,SASvB,uEAIP,C","sources":["components/reviews/Reviews.jsx"],"sourcesContent":["import { fetchMovieReviews } from 'api/fetchMovies';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId, page } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId, page).then(data => {\n      // console.log(data.results)\n      setReviews(data.results);\n    });\n  }, [movieId, page]);\n\n  // console.log(reviews);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <h3>We don't have any reviews for this movie.</h3>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["useParams","movieId","page","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","data","results","length","map","review","author","content","id"],"sourceRoot":""}