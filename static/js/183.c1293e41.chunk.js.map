{"version":3,"file":"static/js/183.c1293e41.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/fetchMovies.jsx","webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=36aae46d872dddaed5df56cf6ef9643b';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\n//get list of the most popular movies for today\nexport function fetchTrendingMovies(page = '1') {\n  const PATH_PARAMS = '/trending/movie/day';\n  // return\n  return fetchWithErrorHandling(\n    `${BASE_URL}${PATH_PARAMS}${API_KEY}&page=${page}`\n  );\n}\n\n//get search for a movie\nexport function fetchMovies(searchQuery, page = '1') {\n  const PATH_PARAMS = '/search/movie';\n  // eslint-disable-next-line\n  const SEARCH_PARAMS = '&language=en-US&include_adult=false';\n\n  return fetchWithErrorHandling(\n    `${BASE_URL}${PATH_PARAMS}${API_KEY}&${searchQuery}&page=${page}`\n  );\n}\n\n//get full movie info for the movie page\nexport function fetchMovieDetails(movie_id) {\n  const PATH_PARAMS = '/movie/';\n  const SEARCH_PARAMS = '&language=en-US';\n\n  return fetchWithErrorHandling(\n    `${BASE_URL}${PATH_PARAMS}${movie_id}${API_KEY}${SEARCH_PARAMS}`\n  );\n}\n\n// get cast info for the movie page\nexport function fetchMovieCredits(movie_id) {\n  const PATH_PARAMS = '/movie/';\n  const SEARCH_PARAMS = '&language=en-US';\n\n  return fetchWithErrorHandling(\n    `${BASE_URL}${PATH_PARAMS}${movie_id}/credits${API_KEY}${SEARCH_PARAMS}`\n  );\n}\n\n//get reviews for the movie page\nexport function fetchMovieReviews(movie_id, page = '1') {\n  const PATH_PARAMS = '/movie/';\n  const SEARCH_PARAMS = '&language=en-US&page=';\n\n  return fetchWithErrorHandling(\n    `${BASE_URL}${PATH_PARAMS}${movie_id}/reviews${API_KEY}${SEARCH_PARAMS}${page}`\n  );\n}\n\n// const fetchMovies = ({ movieId }) => {\n//     const url = 'https://api.themoviedb.org/3/movie/';\n//     const movieId = `${movieID}?`;\n\n//     try {\n//         axios.get(`${url}${movieId}${key}`)\n//         .then(response => {\n//             return response.data\n//         })\n//     } catch {\n\n//     }\n// }\n\nexport default fetchMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__O2f4k\",\"cast_profile\":\"Cast_cast_profile__w8T6A\",\"cast_data\":\"Cast_cast_data__9Vrry\",\"cast_image\":\"Cast_cast_image__lI9y6\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'api/fetchMovies';\nimport Styled from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchMovieCredits(movieId).then(data => {\n      // console.log(data)\n      setCast(data.cast);\n    });\n  }, [movieId]);\n\n  console.log(cast);\n\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <>\n          <ul className={Styled.cast_list}>\n            {cast.map(\n              (\n                person //brackets not needed in order to render correctly\n              ) => (\n                <li key={person.id} className={Styled.cast_profile}>\n                  <a\n                    href={`https://www.google.com/search?q=${person.original_name}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <div>\n                      {person.profile_path ? (\n                        <img\n                          src={`https://image.tmdb.org/t/p/original${person.profile_path}`}\n                          className={Styled.cast_image}\n                          alt={person.original_name}\n                        />\n                      ) : (\n                        <h3>No Photo Available</h3>\n                      )}\n                    </div>\n                  </a>\n                  <div className={Styled.cast_data}>\n                    <p>Name: {person.original_name}</p>\n\n                    <p>Character: {person.character}</p>\n                  </div>\n                </li>\n              )\n            )}\n          </ul>\n        </>\n      ) : (\n        <h3>We don't have any casts for this movie.</h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Error","fetchTrendingMovies","page","PATH_PARAMS","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","SEARCH_PARAMS","searchQuery","movieId","useParams","useState","cast","setCast","useEffect","data","console","log","length","className","Styled","map","person","href","original_name","target","rel","profile_path","src","alt","character","id"],"sourceRoot":""}